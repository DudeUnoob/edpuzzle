<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <title>Kahoot Quiz</title>
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-91CBMKRN8Y"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag() { dataLayer.push(arguments); }
    gtag('js', new Date());

    gtag('config', 'G-91CBMKRN8Y');
  </script>
    <style>
         @import url('https://fonts.googleapis.com/css2?family=Fredoka+One&display=swap');
        h3 {
            color: blue;
            text-decoration: underline;
            font-weight: 100;
        }

        * {
            font-family: 'Fredoka One', cursive;
            margin: 0px;
        }
       #helloworld {
        color: rgb(145, 0, 0);
        font-weight: 100;
       }

       h1{
        text-align: center;
       }

       body{
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica,
    Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
    background-image: url(https://coolbackgrounds.io/images/backgrounds/index/aqua-d9b59c89.png);
       }
       .card {
        /* border-style: none;
            cursor: pointer;
            border-radius: 5px;
             box-shadow: 10px 10px 15px -1px rgba(34, 33, 33, 0.74);
            -webkit-box-shadow: 10px 10px 15px -1px rgba(34, 33, 33, 0.74);
            -moz-box-shadow: 10px 10px 15px -1px rgba(34, 33, 33, 0.74);
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
            transition: 0.3s;
            padding: 5px;  */

            margin: 20px;
  padding: 20px;
  justify-content: center;
  background: radial-gradient(#1fe4f5, #3fbafe);
  display: flex;
  flex-direction: column;
  border-radius: 10px;
  transition: all 0.2s;
  
       }
       .card:hover {
            /* box-shadow: 0 12px 16px 0 rgba(255, 255, 255, 0.24), 0 17px 50px 0 rgba(255, 254, 254, 0.19); */
            border-radius: 10px;
  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.25);
  transition: all 0.2s;
  cursor: pointer;
        }

        @media (max-width: 1600px) {
  .cards {
    justify-content: center;
  }
}

#answer {
    color: rgb(163, 20, 20);
}

#question {
    margin-bottom: 5px;
}

#questionImage {
    max-width: 200px;
}
    </style>
</head>
<body>
  

<script>
    fetch("/kahoot/data")
    .then(res => res.json())
    .then(info => {
        const title = document.createElement('h1')
        const divQuestions = document.getElementById("questions")
        console.log(info)
        info.data.answers.map((elm, i) => {
            const br = document.createElement('br')

            const card = document.createElement("div")
            card.setAttribute("class", "card")
            document.body.appendChild(card)
            const imageQuestionElm = document.createElement("img")
            imageQuestionElm.src = elm.question.image
            imageQuestionElm.setAttribute("id", "questionImage")

            const questionElm = document.createElement("p")
            questionElm.setAttribute("id", "question")
            questionElm.innerHTML = elm.question.text


            const answerElement = document.createElement("p")
            answerElement.setAttribute("id", "answer")
            answerElement.innerHTML = elm.answers[0].text

            
            card.appendChild(imageQuestionElm)
            card.appendChild(br)
            card.appendChild(questionElm)
            card.appendChild(answerElement)
        })
    })
    window.addEventListener('load', (event) => {
        // fetch('/kahoot/data')
        //     .then(res => res.json())
        //     .then(data => {
        //         //console.log(data)
        //         const br = document.createElement('br')
        //         const title = document.createElement('h1')
        //         const divQuestions = document.getElementById("questions")
                
        //         title.textContent = data.title
        //         document.body.append(title)
                
        //         let myData = data.questions.filter((item) => item.type != "survey" && item.type != "open_ended" && item.type != "content")

                
        //         myData.forEach((elm) => {
        //             const card = document.createElement('div')
        //             card.setAttribute('class', 'card')
        //             document.body.appendChild(card)

        //             const questionElm = document.createElement('p')
        //             questionElm.setAttribute('id', 'question')
        //             questionElm.textContent = elm.question
                    
        //             card.appendChild(questionElm)
                    
        //             const correctFilter = elm.choices.filter((item) => item.correct != false)
                    

        //             correctFilter.map((item) => {
        //                 console.log(item.answer)

        //                 const answerElement = document.createElement('p')
        //                 answerElement.setAttribute('id','answer')
        //                 answerElement.textContent = item.answer
                        
        //                 card.appendChild(answerElement)
                        
        //             })
                    
                    
        //         })
            
        //     })
    })
        // fetch('/kahoot/data')
        // //data.kahoot.questions has all data
        // .then(res => res.json())
        // .then(info => {
        //     console.log(info)
        //     //console.log(info.data.challenge.kahoot)
        //     if(info.data.challenge?.kahoot){
        //         const br = document.createElement("br")
        //     const title = document.createElement("h1")
        //     const divQuestions = document.getElementById("questions")

        //     title.textContent = info.data.challenge.kahoot.title
        //     document.body.append(title)

        //     info.data.challenge.kahoot.questions.map((elm,i) => {
        //         //console.log(elm)

        //         const card = document.createElement("div")
        //         const questionImage = document.createElement("img")
        //         questionImage.setAttribute("id","questionImage")
        //         questionImage.src = elm.image ? elm.image : ""
        //         card.appendChild(questionImage)
        //         card.setAttribute("class", "card")
        //         document.body.appendChild(card)

        //         const questionElm = document.createElement("p")
        //         questionElm.setAttribute("id", "question")
        //         questionElm.innerHTML = elm.question

        //         card.appendChild(questionElm)

        //         const correctFilter = elm.choices.filter((choice) => choice.correct != false)

        //         correctFilter.map((item) => {
        //             //console.log(item.answer)

        //             const answerElement = document.createElement("p")
        //             answerElement.setAttribute("id","answer")
        //             answerElement.innerHTML = item.answer

        //             card.appendChild(answerElement)
        //         })
        //     })
        //     } else {
        //         const br = document.createElement('br')
        //         const title = document.createElement('h1')
        //         const divQuestions = document.getElementById("questions")
                
        //         title.textContent = info.title
        //         document.body.append(title)
                
        //         console.log(info)

        //         // info.data.questions.map((elm, i) => {
                    
        //         // })
        //         let myData = info.data.questions.filter((item) => item.type != "survey" && item.type != "open_ended" && item.type != "content")

                
        //         myData.forEach((elm) => {
        //             const card = document.createElement('div')
        //             card.setAttribute('class', 'card')
        //             document.body.appendChild(card)

        //             const questionElm = document.createElement('p')
        //             questionElm.setAttribute('id', 'question')
        //             questionElm.textContent = elm.question
                    
        //             card.appendChild(questionElm)
        //             console.log(elm)
        //              const correctFilter = elm.choices.filter((item) => item.correct != false)
                    

        //             correctFilter.map((item) => {
        //                 console.log(item.answer)

        //                 const answerElement = document.createElement('p')
        //                 answerElement.setAttribute('id','answer')
        //                 answerElement.textContent = item.answer
                        
        //                 card.appendChild(answerElement)
                        
        //             })
                    
                    
        //         })

        //     }
        // })
</script>
</body>
</html>